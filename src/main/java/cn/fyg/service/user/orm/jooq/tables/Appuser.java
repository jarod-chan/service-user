/**
 * This class is generated by jOOQ
 */
package cn.fyg.service.user.orm.jooq.tables;


import cn.fyg.service.user.orm.jooq.Keys;
import cn.fyg.service.user.orm.jooq.Service_user_dev;
import cn.fyg.service.user.orm.jooq.tables.records.AppuserRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Appuser extends TableImpl<AppuserRecord> {

	private static final long serialVersionUID = -1538296807;

	/**
	 * The reference instance of <code>service-user-dev.appuser</code>
	 */
	public static final Appuser APPUSER = new Appuser();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AppuserRecord> getRecordType() {
		return AppuserRecord.class;
	}

	/**
	 * The column <code>service-user-dev.appuser.id</code>.
	 */
	public final TableField<AppuserRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>service-user-dev.appuser.app_id</code>.
	 */
	public final TableField<AppuserRecord, Long> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>service-user-dev.appuser.fyid</code>.
	 */
	public final TableField<AppuserRecord, Long> FYID = createField("fyid", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>service-user-dev.appuser.appinterid</code>.
	 */
	public final TableField<AppuserRecord, String> APPINTERID = createField("appinterid", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

	/**
	 * Create a <code>service-user-dev.appuser</code> table reference
	 */
	public Appuser() {
		this("appuser", null);
	}

	/**
	 * Create an aliased <code>service-user-dev.appuser</code> table reference
	 */
	public Appuser(String alias) {
		this(alias, APPUSER);
	}

	private Appuser(String alias, Table<AppuserRecord> aliased) {
		this(alias, aliased, null);
	}

	private Appuser(String alias, Table<AppuserRecord> aliased, Field<?>[] parameters) {
		super(alias, Service_user_dev.SERVICE_USER_DEV, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<AppuserRecord, Long> getIdentity() {
		return Keys.IDENTITY_APPUSER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AppuserRecord> getPrimaryKey() {
		return Keys.KEY_APPUSER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AppuserRecord>> getKeys() {
		return Arrays.<UniqueKey<AppuserRecord>>asList(Keys.KEY_APPUSER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<AppuserRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<AppuserRecord, ?>>asList(Keys.APPUSER_3aAPP_ID, Keys.APPUSER_3aFYID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Appuser as(String alias) {
		return new Appuser(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Appuser rename(String name) {
		return new Appuser(name, null);
	}
}
